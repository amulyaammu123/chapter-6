def permute(nums):
    def backtrack(current_permutation, used):
        if len(current_permutation) == len(nums):
            result.append(current_permutation[:])  # Make a copy of current permutation
            return
        
        for i in range(len(nums)):
            if not used[i]:
                used[i] = True
                current_permutation.append(nums[i])
                backtrack(current_permutation, used)
                current_permutation.pop()
                used[i] = False
    
    result = []
    used = [False] * len(nums)
    backtrack([], used)
    return result

# Example usage:
nums = [1, 2, 3]
print(permute(nums))
# Output: [[1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2], [3, 2, 1]]
